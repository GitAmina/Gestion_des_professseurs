generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql" // Adapte si n√©cessaire (ex: "postgresql" pour PostgreSQL)
  url      = env("DATABASE_URL")
}

model Utilisateur {
  id         Int         @id @default(autoincrement())
  email      String      @unique
  motDePasse String
  role       Role
  Professeur Professeur?
  Etudiant   Etudiant?

  Log Log[]
}

model Professeur {
  id         Int      @id @default(autoincrement())
  nom        String
  prenom     String
  email      String   @unique
  telephone  String?
  password   String
  created_at DateTime @default(now())
  statut     Statut
  photo      String?  @db.Text

  utilisateur Utilisateur @relation(fields: [id], references: [id], onDelete: Cascade)

  Professeur_Matiere Professeur_Matiere[]
}

model Etudiant {
  id                  Int    @id
  nom                 String
  prenom              String
  numeroEtudiant      String @unique
  semestreInscription String

  utilisateur Utilisateur @relation(fields: [id], references: [id], onDelete: Cascade)

  Etudiant_Module Etudiant_Module[]
}

model Matiere {
  id  Int    @id @default(autoincrement())
  nom String @unique

  Professeur_Matiere Professeur_Matiere[]
  Module_Matiere     Module_Matiere[]
}

model Module {
  id  Int    @id @default(autoincrement())
  nom String @unique

  Module_Matiere  Module_Matiere[]
  Etudiant_Module Etudiant_Module[]
}

model Module_Matiere {
  id_module  Int
  id_matiere Int

  module  Module  @relation(fields: [id_module], references: [id], onDelete: Cascade)
  matiere Matiere @relation(fields: [id_matiere], references: [id], onDelete: Cascade)

  @@id([id_module, id_matiere])
}

model Professeur_Matiere {
  id_professeur Int
  id_matiere    Int

  professeur Professeur @relation(fields: [id_professeur], references: [id], onDelete: Cascade)
  matiere    Matiere    @relation(fields: [id_matiere], references: [id], onDelete: Cascade)

  @@id([id_professeur, id_matiere])
}

model Etudiant_Module {
  id_etudiant Int
  id_module   Int

  etudiant Etudiant @relation(fields: [id_etudiant], references: [id], onDelete: Cascade)
  module   Module   @relation(fields: [id_module], references: [id], onDelete: Cascade)

  @@id([id_etudiant, id_module])
}

model Log {
  id             Int      @id @default(autoincrement())
  utilisateur_id Int?
  action         String
  date_action    DateTime @default(now())

  utilisateur Utilisateur? @relation(fields: [utilisateur_id], references: [id], onDelete: SetNull)
}

enum Role {
  Professeur
  Etudiant
}

enum Statut {
  permanent
  vacataire
}
